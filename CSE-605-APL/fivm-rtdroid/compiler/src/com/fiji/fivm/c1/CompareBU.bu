#
# CompareBU.bu
# Copyright 2008, 2009, 2010, 2011, 2012, 2013 Fiji Systems Inc.
# This file is part of the FIJI VM Software licensed under the FIJI PUBLIC
# LICENSE Version 3 or any later version.  A copy of the FIJI PUBLIC LICENSE is
# available at fivm/LEGAL and can also be found at
# http://www.fiji-systems.com/FPL3.txt
# 
# By installing, reproducing, distributing, and/or using the FIJI VM Software
# you agree to the terms of the FIJI PUBLIC LICENSE.  You may exercise the
# rights granted under the FIJI PUBLIC LICENSE subject to the conditions and
# restrictions stated therein.  Among other conditions and restrictions, the
# FIJI PUBLIC LICENSE states that:
# 
# a. You may only make non-commercial use of the FIJI VM Software.
# 
# b. Any adaptation you make must be licensed under the same terms 
# of the FIJI PUBLIC LICENSE.
# 
# c. You must include a copy of the FIJI PUBLIC LICENSE in every copy of any
# file, adaptation or output code that you distribute and cause the output code
# to provide a notice of the FIJI PUBLIC LICENSE. 
# 
# d. You must not impose any additional conditions.
# 
# e. You must not assert or imply any connection, sponsorship or endorsement by
# the author of the FIJI VM Software
# 
# f. You must take no derogatory action in relation to the FIJI VM Software
# which would be prejudicial to the FIJI VM Software author's honor or
# reputation.
# 
# 
# The FIJI VM Software is provided as-is.  FIJI SYSTEMS INC does not make any
# representation and provides no warranty of any kind concerning the software.
# 
# The FIJI PUBLIC LICENSE and any rights granted therein terminate
# automatically upon any breach by you of the terms of the FIJI PUBLIC LICENSE.
#
#

class com.fiji.fivm.c1.CompareBU

EqCompareG := Eq(CompareG(a,b),$0)
NeqCompareG := Neq(CompareG(a,b),$0)
LTCompareG1 := Eq(CompareG(a,b),$-1)
LECompareG1 := Neq(CompareG(a,b),$1)
GTCompareG1 := Eq(CompareG(a,b),$1)
GECompareG1 := Neq(CompareG(a,b),$-1)

EqCompareL := Eq(CompareL(a,b),$0)
NeqCompareL := Neq(CompareL(a,b),$0)
LTCompareL1 := Eq(CompareL(a,b),$-1)
LECompareL1 := Neq(CompareL(a,b),$1)
GTCompareL1 := Eq(CompareL(a,b),$1)
GECompareL1 := Neq(CompareL(a,b),$-1)

LTCompareG2 := LessThan(CompareG(a,b),$0)
LECompareG2 := LessThanEq(CompareG(a,b),$0)
LTCompareL2 := LessThan(CompareL(a,b),$0)
LECompareL2 := LessThanEq(CompareL(a,b),$0)
GTCompareG2 := LessThan($0,CompareG(a,b))
GECompareG2 := LessThanEq($0,CompareG(a,b))
GTCompareL2 := LessThan($0,CompareL(a,b))
GECompareL2 := LessThanEq($0,CompareL(a,b))

BZCompareG := BranchZero(CompareG(a,b))
BNZCompareG := BranchNonZero(CompareG(a,b))
BZCompareL := BranchZero(CompareL(a,b))
BNZCompareL := BranchNonZero(CompareL(a,b))

BoolCompareG := Boolify(CompareG(a,b))
NotCompareG := Not(CompareG(a,b))
BoolCompareL := Boolify(CompareL(a,b))
NotCompareL := Not(CompareL(a,b))

