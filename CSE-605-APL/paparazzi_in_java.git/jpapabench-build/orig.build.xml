<!-- $Id$  
  This file is a part of jPapaBench providing a Java implementation 
  of PapaBench project.
  Copyright (C) 2010  Michal Malohlava <michal.malohlava_at_d3s.mff.cuni.cz>
 
  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->

<!--
	Build file for all jPapaBench versions:
	 - plain Java
	 - RTSJ
	 - SCJ	
-->
<project name="jPapaBench" default="build.all" basedir=".">

	<!-- personal build properties -->
	<property file="personal.build.properties" />
	
	<!-- basic configuration properties -->
    <property file="build.properties" />

    <property name="build.sysclasspath" value="ignore" />
	
	<path id="classpath.build.rtsj">
		<pathelement location="${build.rtsj.api}" />
	</path>
	
	<path id="classpath.build.scj">
		<pathelement location="${build.scj.api}" />
	</path>
	
	<path id="classpath.run.rtsj">
	</path>
		
	<path id="classpath.run.scj">
	</path>

	<!-- build time classpaths -->
	<path id="classpath.base">
	</path>

	<path id="classpath.build.base">
		<path refid="classpath.base" />
	</path>

	<path id="classpath.build.jpapabench.core">
		<path refid="classpath.build.base" />
	</path>

	<path id="classpath.build.jpapabench.core.flightplans">
		<path refid="classpath.build.base" />
		<pathelement location="${output.jpapabench.core.dir}" />
	</path>

	<path id="classpath.build.jpapabench.pj">
		<pathelement location="${output.jpapabench.core.dir}" />
		<pathelement location="${output.jpapabench.core.flightplans.dir}" />
	</path>

	<path id="classpath.build.jpapabench.rtsj">
		<path refid="classpath.build.base" />
		<path refid="classpath.build.rtsj" />
		<pathelement location="${output.jpapabench.core.dir}" />
		<pathelement location="${output.jpapabench.core.flightplans.dir}" />
	</path>

	<path id="classpath.build.jpapabench.scj">
		<path refid="classpath.build.base" />
		<path refid="classpath.build.scj" />
		<pathelement location="${output.jpapabench.core.dir}" />
		<pathelement location="${output.jpapabench.core.flightplans.dir}" />
	</path>

	<!-- runtime classpaths -->
	<path id="classpath.run">
		<path refid="classpath.base" />
	</path>

	<path id="classpath.run.jpapabench.scj">
		<path refid="classpath.run" />
		<path refid="classpath.run.scj" />
		<pathelement location="${out.jjpapabench.scj.dir}" />
	</path>

	<path id="classpath.run.jpapabench.rtsj">
		<path refid="classpath.run" />
		<path refid="classpath.run.rtsj" />
		<pathelement location="${output.jpapabench.rtsj.dir}" />
		<pathelement location="${output.jpapabench.core.dir}" />
		<pathelement location="${output.jpapabench.core.flightplans.dir}" />
	</path>

	<path id="classpath.run.jpapabench.pj">
		<path refid="classpath.run" />
		<pathelement location="${output.jpapabench.pj.dir}" />
		<pathelement location="${output.jpapabench.core.dir}" />
		<pathelement location="${output.jpapabench.core.flightplans.dir}" />
	</path>

	<target name="init" depends="clean">
		<mkdir dir="${output.dir}" />
		<mkdir dir="${output.jpapabench.core.dir}" />
		<mkdir dir="${output.jpapabench.core.flightplans.dir}" />
		<mkdir dir="${output.jpapabench.pj.dir}" />
		<mkdir dir="${output.jpapabench.rtsj.dir}" />
		<mkdir dir="${output.jpapabench.scj.dir}" />
		<mkdir dir="${log.dir}" />
	</target>

	<target name="clean" description="- clean up">
		<delete dir="${output.dir}" />
	</target>

	<target name="clean.log" description="- clean up log">
		<delete dir="${output.dir}" />
	</target>
	
	<target name="compile.jpapabench.core" depends="init">
		<javac srcdir="${src.jpapabench.core.dir}" destdir="${output.jpapabench.core.dir}" deprecation="on" debug="on" target="1.5">
			<classpath refid="classpath.build.jpapabench.core" />
		</javac>

		<javac srcdir="${src.jpapabench.core.flightplans.dir}" destdir="${output.jpapabench.core.flightplans.dir}" deprecation="on" debug="on" target="1.5">
			<classpath refid="classpath.build.jpapabench.core.flightplans" />
		</javac>
	</target>

	<target name="compile.jpapabench.pj" depends="init">
			<javac srcdir="${src.jpapabench.pj.dir}" destdir="${output.jpapabench.pj.dir}" deprecation="on" debug="on">
				<classpath refid="classpath.build.jpapabench.pj" />
			</javac>
	</target>
	
	<target name="compile.jpapabench.rtsj" depends="init">
		<javac srcdir="${src.jpapabench.rtsj.dir}" destdir="${output.jpapabench.rtsj.dir}" deprecation="on" debug="on" target="1.5">
			<classpath refid="classpath.build.jpapabench.rtsj" />
		</javac>
	</target>
	
	<target name="compile.jpapabench.scj" depends="init">
		<javac srcdir="${examples.jpapabench.dir}" destdir="${output.jpapabench.scj.dir}" deprecation="on" debug="on">
			<classpath refid="classpath.build.progs" />
		</javac>
	</target>
	
	<target name="build.jpapabench.pj" depends="compile.jpapabench.core,compile.jpapabench.pj" description="- build plain Java version of jPapaBench" />
	<target name="build.jpapabench.rtsj" depends="compile.jpapabench.core,compile.jpapabench.rtsj" description="- build RTSJ version of jPapaBench" />
	<target name="build.jpapabench.scj" depends="compile.jpapabench.core,compile.jpapabench.scj" description="- build SCJ version of jPapaBench" />	
	<target name="build.all" depends="build.jpapabench.pj,build.jpapabench.rtsj,build.jpapabench.scj" description="- build all versions of jPapaBench"/>

    <target name="run.jpapabench.pj" depends="build.jpapabench.pj" description="- run a plain Java version of jPapaBench">
		<java classname="papabench.pj.PapaBenchPlainJavaApplication" fork="true" output="${log.dir}/jpapabench_pj.out" error="${log.dir}/jpapabench_pj.err">
			<classpath refid="classpath.run.jpapabench.pj" />
		</java>
	</target>
	
	<target name="run.jpapabench.rtsj" depends="build.jpapabench.rtsj" description="- run RTSJ version of jPapaBench">
		<java classname="papabench.rtsj.PapaBenchRTSJApplication" 
				fork="true" 
				output="${log.dir}/jpapabench_rtsj.out" error="${log.dir}/jpapabench_rtsj.err"
				jvm="${run.rtsj.java}">			
			<classpath refid="classpath.run.jpapabench.rtsj" />
		</java>
	</target>
	
	<target name="run.jpf.jpapabench.scj.l0" depends="build.jpapabench.scj">
		<copy file="scj_jpf.properties" tofile="jpf.properties" overwrite="yes" />
		<java jar="${jpf.core.dir}/build/RunJPF.jar" fork="true" output="${log.dir}/jpapabench_l0.out" error="${log.dir}/jpapabench_l0.err">
			<arg value="+classpath=.,${output.jpapabench.scj.dir}" />
			<arg value="+site=./site.properties" />
			<arg value="javax.safetycritical.SCJRuntime" />
			<arg value="jpapabench.scj.PapaBenchSCJLevel0Application" />
			<jvmarg value="-Xmx20g" />
			<jvmarg value="-Xss64m" />
			<classpath refid="classpath.run.jpapabench.scj" />
		</java>
		<copy file="rtsj_jpf.properties" tofile="jpf.properties" overwrite="yes" />
	</target>

	<target name="run.jpf.jpapabench.scj.l1" depends="build.jpapabench.scj">
		<copy file="scj_jpf.properties" tofile="jpf.properties" overwrite="yes" />
		<java jar="${jpf.core.dir}/build/RunJPF.jar" fork="true" output="${log.dir}/jpapabench_l1.out" error="${log.dir}/jpapabench_l1.err">
			<arg value="+classpath=.,${output.jpapabench.scj.dir}" />
			<arg value="+site=./site.properties" />
			<!-- 
            <arg value="+listener+=,gov.nasa.jpf.listener.RaceDetector"/>
			<arg value="+race.verify_cycle=true"/>
             -->
			<arg value="javax.safetycritical.SCJRuntime" />
			<arg value="jpapabench.scj.PapaBenchSCJLevel1Application" />
			<jvmarg value="-Xmx20g" />
			<jvmarg value="-Xss64m" />
			<classpath refid="classpath.run.jpapabench.scj" />
		</java>
		<copy file="rtsj_jpf.properties" tofile="jpf.properties" overwrite="yes" />
	</target>

	<target name="run.jpf.jpapabench.scj" depends="run.jpf.jpapabench.scj.l0,run.jpf.jpapabench.scj.l1" />

	<target name="run.jpf.jpapabench.rtsj" depends="build.jpapabench.rtsj">
		<copy file="rtsj_history_jpf.properties" tofile="jpf.properties" overwrite="yes" />
		<java jar="${jpf.core.dir}/build/RunJPF.jar" fork="true" output="${log.dir}/jpapabench_rtsj.out" error="${log.dir}/jpapabench_rtsj.err">
			<arg value="+classpath=.,${output.jpapabench.rtsj.dir},${output.jpapabench.core.dir},${output.jpapabench.core.flightplans.dir}" />
			<arg value="+site=./site.properties" />
			<!--
			<arg value="+listener+=,gov.nasa.jpf.listener.RaceDetector"/>
            <arg value="+race.verify_cycle=true"/>
            -->
			<arg value="papabench.rtsj.PapaBenchRTSJApplication" />
			<jvmarg value="-Xmx20g" />
			<jvmarg value="-Xss64m" />
			<classpath refid="classpath.run.jpapabench.rtsj" />
		</java>
		<copy file="rtsj_jpf.properties" tofile="jpf.properties" overwrite="yes" />
	</target>


	<target name="debug.jpapabench.scj" depends="build.jpapabench.scj">
		<copy file="scj_jpf_debug.properties" tofile="jpf.properties" overwrite="yes" />
		<java jar="${jpf.core.dir}/build/RunJPF.jar" fork="true" output="${log.dir}/jpapabench_l0_debug.out" error="${log.dir}/jpapabench_l0_debug.err">
			<arg value="+classpath=.,${output.jpapabench.scj.dir}" />
			<arg value="+site=./site.properties" />
			<arg value="+listener+=,gov.nasa.jpf.rtembed.utils.TimeConstrainedJPF" />
			<arg value="+jpf.time_limit=300" />
			<arg value="javax.safetycritical.SCJRuntime" />
			<arg value="papabench.scj.PapaBenchSCJLevel0Application" />
			<jvmarg value="-Xmx4096g" />
			<jvmarg value="-Xss32m" />
			<classpath refid="classpath.run.jpapabench.scj" />
		</java>
		<java jar="${jpf.core.dir}/build/RunJPF.jar" fork="true" output="${log.dir}/jpapabench_l1_debug.out" error="${log.dir}/jpapabench_l1_debug.err">
			<arg value="+classpath=.,${output.jpapabench.dir}" />
			<arg value="+site=./site.properties" />
			<arg value="+listener+=,gov.nasa.jpf.rtembed.utils.TimeConstrainedJPF" />
			<arg value="+jpf.time_limit=300" />
			<arg value="javax.safetycritical.SCJRuntime" />
			<arg value="jpapabench.scj.PapaBenchSCJLevel1Application" />
			<jvmarg value="-Xmx4096g" />
			<jvmarg value="-Xss32m" />
			<classpath refid="classpath.run.jpapabench.scj" />
		</java>
		<copy file="rtsj_jpf.properties" tofile="jpf.properties" overwrite="yes" />
	</target>

</project>
